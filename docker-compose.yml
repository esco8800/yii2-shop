version: '2'
services:
    new-vhost:
        build: docker/imgaes
        container_name: ${VIRTUAL_HOST_CONTAINER_NAME}
        logging:
            driver: "json-file"
            options:
                max-file: "2"
                max-size: "5m"
        restart: always
        ports:
            - ${VIRTUAL_PORT}:80
        environment:
            - VIRTUAL_HOST_CONTAINER_NAME=${VIRTUAL_HOST_CONTAINER_NAME}
            - ENABLE_XDEBUG=1
            - SKIP_CHOWN=1
            - SKIP_COMPOSER=1                       # '${SKIP_COMPOSER}' #  Set to 1 to avoid installing composer
            - XDEBUG_CONFIG=${XDEBUG_CONFIG}
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
            ### Domain name
            - VIRTUAL_HOST=${VIRTUAL_HOST}
        depends_on:
            - redis
        volumes:
            - ./:/var/www/html
            - ./docker/log:/var/www/log
            # Mount git global options and RSA keys data
            - ~/.ssh:/root/.ssh
            # Mount home data and composre cache
            - ./docker/home:/root/
        networks:
            - ng-proxy

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
        container_name: 'elastic-search'
        restart: always
        environment:
            - discovery.type=single-node
            - "discovery.zen.ping.unicast.hosts=elasticsearch"
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ports:
            - 9200:9200
            - 9300:9300
#        working_dir: /app
        volumes:
            - ./:/var/www/html
            - ./docker/data/elasticsearch:/usr/share/elasticsearch/data
        networks:
            - ng-proxy

    redis:
        image: redis:alpine
        restart: always
        logging:
            driver: "json-file"
            options:
                max-file: "2"
                max-size: "5m"
        ports:
             - "6379:6379"
        volumes:
            - ./docker/data/redis/etc/redis.conf:/usr/local/etc/redis/redis.conf
            - ./docker/data/redis:/data
        command: redis-server --appendonly yes
        networks:
             - ng-proxy

networks:
    ng-proxy:
        external:
            name: ngproxy
